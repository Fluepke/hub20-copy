# Generated by Django 3.1.1 on 2020-09-29 23:18

from django.conf import settings
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hub20.apps.core.models.payments
import hub20.apps.ethereum_money.models
import model_utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('blockchain', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ethereum_money', '0002_ethereumtoken_is_listed'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_id', models.PositiveIntegerField()),
                ('owner_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('token', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='books', to='ethereum_money.ethereumtoken')),
            ],
            options={
                'unique_together': {('token', 'owner_type', 'owner_id')},
            },
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', hub20.apps.ethereum_money.models.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('reference_id', models.PositiveIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credits', to='core.book')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ethereum_money.ethereumtoken')),
                ('reference_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('book', 'reference_type', 'reference_id')},
            },
        ),
        migrations.CreateModel(
            name='Debit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', hub20.apps.ethereum_money.models.EthereumTokenAmountField(decimal_places=18, max_digits=32)),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('reference_id', models.PositiveIntegerField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='debits', to='core.book')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ethereum_money.ethereumtoken')),
                ('reference_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'unique_together': {('book', 'reference_type', 'reference_id')},
            },
        ),
        migrations.CreateModel(
            name='PaymentConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('payment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='confirmation', to='core.payment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferCancellation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('canceled_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('transfer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cancellation', to='core.transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferConfirmation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('transfer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='confirmation', to='core.transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferExecution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('transfer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='execution', to='core.transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransferFailure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('transfer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='failure', to='core.transfer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='paymentcredit',
            name='payment',
        ),
        migrations.RemoveField(
            model_name='paymentcredit',
            name='userbalanceentry_ptr',
        ),
        migrations.AlterUniqueTogether(
            name='raidentransaction',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='raidentransaction',
            name='channel',
        ),
        migrations.RemoveField(
            model_name='raidentransaction',
            name='transfer',
        ),
        migrations.AlterUniqueTogether(
            name='transferevent',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='transferevent',
            name='transfer',
        ),
        migrations.RemoveField(
            model_name='userbalanceentry',
            name='currency',
        ),
        migrations.RemoveField(
            model_name='userbalanceentry',
            name='user',
        ),
        migrations.RemoveField(
            model_name='userreserve',
            name='currency',
        ),
        migrations.RemoveField(
            model_name='userreserve',
            name='user',
        ),
        migrations.RemoveField(
            model_name='usertransferreserve',
            name='transfer',
        ),
        migrations.RemoveField(
            model_name='usertransferreserve',
            name='userreserve_ptr',
        ),
        migrations.AlterField(
            model_name='blockchainpaymentroute',
            name='payment_window',
            field=django.contrib.postgres.fields.ranges.IntegerRangeField(default=hub20.apps.core.models.payments.calculate_blockchain_payment_window),
        ),
        migrations.CreateModel(
            name='BlockchainTransferExecution',
            fields=[
                ('transferexecution_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.transferexecution')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='blockchain.transaction')),
            ],
            options={
                'abstract': False,
            },
            bases=('core.transferexecution',),
        ),
        migrations.DeleteModel(
            name='BlockchainTransaction',
        ),
        migrations.DeleteModel(
            name='PaymentCredit',
        ),
        migrations.DeleteModel(
            name='RaidenTransaction',
        ),
        migrations.DeleteModel(
            name='TransferEvent',
        ),
        migrations.DeleteModel(
            name='UserBalanceEntry',
        ),
        migrations.DeleteModel(
            name='UserReserve',
        ),
        migrations.DeleteModel(
            name='UserTransferReserve',
        ),
    ]
