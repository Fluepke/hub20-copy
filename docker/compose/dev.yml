version: '3.4'

x-development: &development_service
  networks:
    dev:

services:
  redis:
    <<: *development_service

  db:
    <<: *development_service
    volumes:
      - "./docker/volumes/database/${HUB20_DATABASE_NAME}:/var/lib/postgresql/data"

  ethereum:
    <<: *development_service
    networks:
      dev:
        ipv4_address: 10.0.20.90
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
      - "8546:8546"
      - "8547:8547"
    volumes:
      - "./docker/volumes/geth/goerli:/chaindata"
    entrypoint:
      - "geth"
      - "--goerli"
      - "--nousb"
      - "--http"
      - "--http.addr=0.0.0.0"
      - "--http.api=eth,net,web3"
      - "--http.vhosts=*"
      - "--ws"
      - "--ws.origins=*"
      - "--ws.addr=0.0.0.0"
      - "--ws.api=eth,net,web3"
      - "--datadir=/chaindata"
      - "--cache=4096"


  # Admin backend
  admin:
    <<: *development_service
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - ./docker/volumes/media/hub20/static:${HUB20_STATIC_ROOT}
    networks:
      dev:
        ipv4_address: 10.0.20.98

  # Web API
  web:
    <<: *development_service
    stdin_open: true
    tty: true
    volumes:
      - .:/app
      - ./docker/volumes/media/hub20/static:${HUB20_STATIC_ROOT}
    networks:
      dev:
        ipv4_address: 10.0.20.99

  # Celery app
  celery:
    <<: *development_service
    stdin_open: true
    tty: true
    volumes:
      - .:/app

  # Celery beat (periodic tasks)
  celery_beat:
    <<: *development_service
    volumes:
      - .:/app
      - "./docker/volumes/celery:${HUB20_DATA_FOLDER}/celery"

  # Background command to listen to blockchain and raiden events
  job_listen_events:
    <<: *development_service
    stdin_open: true
    tty: true
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - ethereum

  # Background command to listen to blockchain and raiden events
  job_listen_raiden:
    <<: *development_service
    stdin_open: true
    tty: true
    volumes:
      - .:/app

  raiden:
    <<: *development_service
    networks:
      dev:
        ipv4_address: 10.0.20.100
    restart: always
    depends_on:
      - db
      - redis
      - ethereum
    volumes:
      - .:/app
      - "./docker/volumes/raiden:${RAIDEN_DATADIR:-/root/.raiden}"

networks:
  dev:
    ipam:
      driver: default
      config:
        - subnet: 10.0.20.0/24
