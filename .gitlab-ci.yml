variables:
  DJANGO_SETTINGS_MODULE: "hub20.api.settings"
  HUB20_BROKER_URL: "redis://redis:6379/0"
  HUB20_CACHE_BACKEND: "django_redis.cache.RedisCache"
  HUB20_CACHE_LOCATION: "redis://redis:6379/1"
  HUB20_CHANNEL_LAYER_HOST: "redis"
  HUB20_DATA_FOLDER: "/var/hub20"
  HUB20_DATABASE_NAME: "hub20_ci"
  HUB20_DATABASE_USER: "hub20"
  HUB20_DATABASE_PASSWORD: "hub20_pass"
  HUB20_DATABASE_HOST: "postgres"
  HUB20_DATABASE_PORT: "5432"
  HUB20_EMAIL_MAILER_ADDRESS: "noreply@gitlab.example.com"
  HUB20_EMAIL_BACKEND: "django.core.mail.backends.console.EmailBackend"
  HUB20_STATIC_ROOT: "/var/hub20/static"
  HUB20_SECRET_KEY: "base-hub20-secret-key"
  HUB20_RAIDEN_ADDRESS_URL: "http://raiden.example.com:5001"

cache:
  paths:
  - ~/.cache/pip/


stages:
  - test
  - build
  - release

test:
  image: python:3.8
  stage: test
  services:
    - postgres:latest
    - redis:latest

  variables:
    POSTGRES_DB: "$HUB20_DATABASE_NAME"
    POSTGRES_USER: "$HUB20_DATABASE_USER"
    POSTGRES_PASSWORD: "$HUB20_DATABASE_PASSWORD"

  script:
    - export
    - pip install -e .
    - pytest

  only:
    - develop
    - branches


build_python_package:
  image: python:3.8
  stage: build

  script:
    - python setup.py build sdist

  artifacts:
    paths:
      - dist/

  only:
    - tags
    - develop
    - master


publish_python_package:
  image: python:3.8
  stage: release

  variables:
    TWINE_NON_INTERACTIVE: 1
    TWINE_USERNAME: "__token__"
    TWINE_PASSWORD: "$PYPI_TOKEN"

  script:
    - pip install twine -u "$TWINE_USERNAME" -p "$TWINE_PASSWORD" 
    - twine upload dist/*

  only:
    - tags


build_docker_image:
  image: docker:19
  stage: release
  services:
    - docker:19-dind

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"

  only:
    - master
