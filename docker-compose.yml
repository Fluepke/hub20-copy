x-hub20: &backend_service
  image: "hub20:${TAG-latest}"
  build:
    context: .
  restart: unless-stopped
  depends_on:
    redis:
      condition: service_healthy
    db:
      condition: service_healthy
    ethereum:
      condition: service_healthy

services:
  db:
    image: postgres:latest
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${HUB20_DATABASE_NAME:-hub20}"]
      interval: 5s
      retries: 5
    restart: unless-stopped

    # Make sure if to match the HUB20_DATABASE_* variables defined above
    environment:
      POSTGRES_DB: "${HUB20_DATABASE_NAME:-hub20}"
      POSTGRES_USER: "${HUB20_DATABASE_USER:-hub20}"
      POSTGRES_PASSWORD: "${HUB20_DATABASE_PASSWORD:-hub20_pass}"


  ethereum:
    image: ethereum/client-go:stable
    stop_signal: SIGINT
    stop_grace_period: 1m
    ports:
      - "30303:30303"
      - "30303:30303/udp"
      - "8545:8545"
      - "8546:8546"
      - "8547:8547"
    entrypoint:
      - "geth"
      - "--goerli"
      - "--nousb"
      - "--http"
      - "--http.addr=0.0.0.0"
      - "--http.api=eth,net,web3"
      - "--http.vhosts=*"
      - "--http.corsdomain=*"
      - "--ws"
      - "--ws.origins=*"
      - "--ws.addr=0.0.0.0"
      - "--ws.api=eth,net,web3"
      - "--datadir=/chaindata"
      - "--cache=4096"
    healthcheck:
      test: ["CMD", "geth", "attach", "http://localhost:8545", "--exec", "eth.blockNumber"]
      interval: 10s
      retries: 10
    restart: unless-stopped

  raiden:
    image: "hub20_raiden:${TAG-latest}"
    build:
      context: ./docker/build/raiden
    ports:
      - "5001:5001"
    restart: unless-stopped

  # Redis for cache, session engine, celery and channels transport
  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: unless-stopped

  # All Hub20 services that on the base image
  # Admin backend
  admin:
    <<: *backend_service
    command: >
      /bin/bash -c '
        django-admin collectstatic --noinput
        uvicorn hub20.admin.asgi:application --port 80 --host 0.0.0.0 --root-path="/admin" --reload --reload-dir /app/hub20
      '

  # Web API
  web:
    <<: *backend_service
    command: >
      /bin/bash -c '
        django-admin migrate;
        django-admin collectstatic --noinput
        uvicorn hub20.api.asgi:application --port 80 --host 0.0.0.0 --root-path="/api" --reload --reload-dir /app/hub20
      '

  # Celery app
  celery:
    <<: *backend_service
    command: celery -A hub20.api worker -l info

  # Celery beat (periodic tasks)
  celery_beat:
    <<: *backend_service
    command: >
      /bin/bash -c "
        mkdir -p /var/hub20/celery;
        while ! nc -w 1 -z db 5432; do sleep 0.5; done;
        while ! nc -w 1 -z redis 6379; do sleep 0.5; done;
        celery -A hub20.api beat -l info -s /var/hub20/celery/celerybeat-schedule.db --pidfile=/var/hub20/celery/celerybeat.pid
      "

  # Background command to listen to blockchain and raiden events
  job_listen_events:
    <<: *backend_service
    command: django-admin run_event_listeners
